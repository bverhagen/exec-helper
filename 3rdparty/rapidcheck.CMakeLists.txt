set(MODULE_NAME rapidcheck)
set(PACKAGE_NAME Rapidcheck)

find_package(${PACKAGE_NAME})
option(USE_SYSTEM_RAPIDCHECK "Use the ${MODULE_NAME} library provided by the system" ${${PACKAGE_NAME}_FOUND})

if(${USE_SYSTEM_RAPIDCHECK})
    # Fix required since the compiler does not like -isystem /usr/include to be explicitly added to its command line
    if(${PACKAGE_NAME}_INCLUDE_DIRS STREQUAL "/usr/include")
        unset(${PACKAGE_NAME}_INCLUDE_DIRS CACHE)
    endif()

    if(NOT ${${PACKAGE_NAME}_FOUND})
        MESSAGE(FATAL_ERROR "Could NOT find ${MODULE_NAME}")
    endif()
else()
    MESSAGE(STATUS " -> Using latest upstream version of ${PACKAGE_NAME} instead")

    include(ExternalProject)

    set(INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}/${MODULE_NAME})

    if(CMAKE_TOOLCHAIN_FILE)
        # Inherit settings from toolchain file
        get_filename_component(TOOLCHAIN_FILE "${CMAKE_TOOLCHAIN_FILE}" ABSOLUTE BASE_DIR "${PROJECT_SOURCE_DIR}")
        set(ADDITIONAL_BUILD_ARGS -DCMAKE_TOOLCHAIN_FILE=${TOOLCHAIN_FILE})
    else()
        set(ADDITIONAL_BUILD_ARGS -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER})
    endif()

    ExternalProject_Add(${PACKAGE_NAME}
        PREFIX ${MODULE_NAME}/source
        GIT_REPOSITORY https://github.com/emil-e/rapidcheck.git
        CMAKE_GENERATOR ${CMAKE_GENERATOR}
        CMAKE_ARGS ${ADDITIONAL_BUILD_ARGS} -DCMAKE_BUILD_TYPE=Release -DRC_ENABLE_CATCH=ON -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER} -DBUILD_TESTING=OFF -DCATCH_BUILD_TESTING=OFF -DCATCH_ENABLE_WERROR=OFF -DCATCH_INSTALL_DOCS=OFF -DCATCH_INSTALL_HELPERS=OFF -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
        INSTALL_DIR ${INSTALL_DIR}
        UPDATE_COMMAND ""
        )

    set(${PACKAGE_NAME}_INCLUDE_DIRS ${INSTALL_DIR}/include)

    if(MSVC)
        set(${PACKAGE_NAME}_LIBRARIES rapidcheck.lib)
    else()
        set(${PACKAGE_NAME}_LIBRARIES librapidcheck.a)
    endif()

    set(${PACKAGE_NAME}_LIBRARY_DIRS ${INSTALL_DIR}/lib ${INSTALL_DIR}/lib64)
endif()

add_library(rpcheck INTERFACE)
target_include_directories(rpcheck SYSTEM INTERFACE ${${PACKAGE_NAME}_INCLUDE_DIRS})
target_link_libraries(rpcheck INTERFACE ${${PACKAGE_NAME}_LIBRARIES})
set(rpcheck_LIBRARY_DIRS ${${PACKAGE_NAME}_LIBRARY_DIRS} CACHE PATH "Library dir for rapidcheck dependency")
mark_as_advanced(rpcheck_LIBRARY_DIRS)

if(NOT ${USE_SYSTEM_RAPIDCHECK})
    add_dependencies(rpcheck ${PACKAGE_NAME})
endif()
