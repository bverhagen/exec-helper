set(MODULE_NAME yaml-cpp)
set(PACKAGE_NAME Yaml-cpp)

find_package(${PACKAGE_NAME})
option(USE_SYSTEM_YAML_CPP "Use the ${MODULE_NAME} library provided by the system" ${${PACKAGE_NAME}_FOUND})

if(${USE_SYSTEM_YAML_CPP})
    if(NOT ${${PACKAGE_NAME}_FOUND})
        MESSAGE(FATAL_ERROR "Could NOT find ${MODULE_NAME}")
    endif()
else()
    MESSAGE(STATUS " -> Using latest upstream version of ${PACKAGE_NAME} instead")

    include(ExternalProject)

    set(YAML_INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}/${MODULE_NAME})

    ExternalProject_Add(Yaml-cpp
        PREFIX yaml-cpp
        GIT_REPOSITORY https://github.com/jbeder/yaml-cpp.git
        CMAKE_ARGS -DYAML_CPP_BUILD_CONTRIB=OFF -DYAML_CPP_BUILD_TOOLS=OFF -DBUILD_SHARED_LIBS=OFF -DMSVC_SHARED_RT=OFF -DMSVC_STHREADED_RT=OFF -Dgtest_force_shared_crt=OFF -DAPPLE_UNIVERSAL_BIN=OFF -DCMAKE_INSTALL_PREFIX=${YAML_INSTALL_DIR}
        INSTALL_DIR ${YAML_INSTALL_DIR}
        UPDATE_COMMAND ""
        )

    set(${PACKAGE_NAME}_INCLUDE_DIRS ${YAML_INSTALL_DIR}/include)
    set(${PACKAGE_NAME}_LIBRARIES ${YAML_INSTALL_DIR}/lib/libyaml-cpp.a)
    set(${PACKAGE_NAME}_LIBRARY_DIRS ${YAML_INSTALL_DIR}/lib)
endif()

add_library(yaml-3rd INTERFACE)
target_include_directories(yaml-3rd SYSTEM INTERFACE ${${PACKAGE_NAME}_INCLUDE_DIRS})
target_link_libraries(yaml-3rd INTERFACE ${${PACKAGE_NAME}_LIBRARIES})

if(NOT ${USE_SYSTEM_YAML_CPP})
    add_dependencies(yaml-3rd ${PACKAGE_NAME})
endif()
