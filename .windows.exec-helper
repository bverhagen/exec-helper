patterns:
    COMPILER:
        default-values:
            - msvc
        short-option: c
        long-option: compiler
    MODE:
        default-values:
            - debug
            - release
        short-option: m
        long-option: mode
    TARGET:
        default-values:
            - ""
        short-option: t
        long-option: target
    RUNTARGET:
        default-values:
            - unittest
            - integration
        short-option: r
        long-option: run-target
    MODULE:
        default-values:
            - log
            - config
            - yaml
            - core
            - plugins
            - commander
        short-option: e
        long-option: module
    COMPONENT:
        default-values:
            - ""
        short-option: f
        long-option: component
    DOCSTYPE:
        default-values:
            - html
            - xml
            - man
        short-option: o
        long-option: docs-type
    SOURCE_TYPE:
        default-values:
            - src
            - test
        long-option: source-type

commands:
    setup: Setup the repository for building
    init: Initialize the build infrastructure
    build: Build-only + install
    build-only: Build only
    install: Install only
    create-installer: Create Windows installer
    clean: Clean build
    distclean: Distclean build
    rebuild: Clean + build
    run-test: unittest + integration
    unittest: Run the specified unittests
    integration: Run the specified integration tests
    docs: Build + install the documentation
    changelog: Build the changelog

setup:
    - command-line-command

init:
    - command-line-command

build:
    - build-only
    - install

build-only:
    - ninja

install:
    - command-line-command

create-installer:
    - command-line-command

clean:
    - ninja

distclean:
    - command-line-command

rebuild:
    - clean
    - build

run-test:
    - selector

unittest:
    - command-line-command

integration:
    - integration-old
    - integration-new

integration-old:
    - command-line-command

integration-new:
    - command-line-command

docs:
    - ninja
    - command-line-command

selector:
    run-test:
        patterns: RUNTARGET

changelog:
    - ninja
    - command-line-command

ninja:
    patterns:
        - COMPILER
        - MODE
    build-dir: build/{COMPILER}/{MODE}/build
    single-threaded: no
    clean:
        command-line:
            - clean
    docs:
        patterns:
            - COMPILER
            - MODE
            - DOCSTYPE
        command-line:
            - docs-{DOCSTYPE}
    changelog:
        patterns:
            - COMPILER
            - MODE
        command-line:
            - changelog

command-line-command:
    setup:
        patterns:
            - COMPILER
            - MODE
        command-line: [ ln, -fs, "build/{COMPILER}/{MODE}/build/compile_commands.json"]

    init:
        patterns:
            - COMPILER
            - MODE
            - EH_WORKING_DIR
        command-line: [cmake, -G, "Ninja", "-H.", "-Bbuild/{COMPILER}/{MODE}/build", "-DCMAKE_INSTALL_PREFIX=build/{COMPILER}/{MODE}/install", "-DCMAKE_BUILD_TYPE={MODE}", -DBUILD_HTML_DOCUMENTATION=OFF, -DBUILD_XML_DOCUMENTATION=OFF, -DBUILD_MAN_DOCUMENTATION=OFF, -DTERMINATE_ON_ASSERT_FAILURE=ON, "-DBOOST_ROOT=C:/local/boost_1_69_0", -DBUILD_MAN_DOCUMENTATION=OFF, -DENABLE_TESTING=OFF, -DBoost_NO_SYSTEM_PATHS=OFF]

    distclean:
        patterns:
            - COMPILER
            - MODE
        command-line: [ rm, -rf, "build/{COMPILER}/{MODE}"]
    install:
        patterns:
            - COMPILER
            - MODE
            - COMPONENT
        command-line: [ cmake, "-DCOMPONENT={COMPONENT}", -P, "build/{COMPILER}/{MODE}/build/cmake_install.cmake"]
    create-installer:
        patterns:
            - COMPILER
            - MODE
        working-dir: "build/{COMPILER}/{MODE}/install/bin"
        command-line:
            - cp-script: [ copy, /Y, ..\..\..\..\..\installer.nsi, .]
            - build: [ C:\Program Files (x86)\NSIS\Bin\makensis.exe, ..\..\..\..\..\installer.nsi]
    unittest:
        patterns:
            - COMPILER
            - MODE
            - MODULE
        command-line: build/{COMPILER}/{MODE}/install/test/unittest/exec-helper-{MODULE}-unittest

    integration-new:
        patterns:
            - COMPILER
            - MODE
            - EH_WORKING_DIR
        environment:
            PYTHONHOME: ""
        command-line:
            test: [robot, "--outputdir", "build/{COMPILER}/{MODE}", --suitestatlevel, 3, "build/{COMPILER}/{MODE}/install/test/integration/"]

    integration-old:
        patterns:
            - COMPILER
            - MODE
        command-line: build/{COMPILER}/{MODE}/install/test/integration/exec-helper-integration-test
    docs:
        patterns:
            - COMPILER
            - MODE
            - DOCSTYPE
        command-line: [ cmake, "-DCOMPONENT=docs-{DOCSTYPE}", -P, "build/{COMPILER}/{MODE}/build/cmake_install.cmake"]
    changelog:
        patterns:
            - COMPILER
            - MODE
        command-line: [ cmake, "-DCOMPONENT=changelog", -P, "build/{COMPILER}/{MODE}/build/cmake_install.cmake"]
