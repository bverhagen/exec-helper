image: dock0/arch

before_script:
    - pacman -Sy --noconfirm
    - pacman -S --noconfirm boost boost-libs yaml-cpp

stages:
    - build
    - test
    - deploy

build:gcc:
    stage: build
    script: 
        - pacman -S --noconfirm scons gcc clang make boost boost-libs git libunistring ncurses yaml-cpp
        - git submodule update --init
        - scons -j8 compiler=gcc mode=debug
        - scons -j8 compiler=gcc mode=release
    artifacts:
        expire_in: 1 day
        paths:
            - build/

build:clang:
    stage: build
    script: 
        - pacman -S --noconfirm scons gcc clang make boost boost-libs git libunistring ncurses yaml-cpp
        - git submodule update --init
        - scons -j8 compiler=clang mode=debug
        - scons -j8 compiler=clang mode=release
    artifacts:
        expire_in: 1 day
        paths:
            - build/

test-distribution:ubuntu-yakkety:
    image: ubuntu:yakkety
    stage: test
    before_script:
        - apt-get install --yes -qq scons cmake gcc g++ libboost-program-options1.61-dev libyaml-cpp-dev git
        - git submodule update --init
    script:
        - scons -j8 compiler=gcc mode=release
        - scons -j8 compiler=clang mode=release

unittest-core:
    stage: test
    dependencies:
        - build:gcc
    script:
        - build/gcc/release/bin/exec-helper run-test --module core --run-target unittest --compiler gcc --mode release

unittest-yaml:
    stage: test
    dependencies:
        - build:gcc
    script:
        - build/gcc/release/bin/exec-helper run-test --module yaml --run-target unittest --compiler gcc --mode release

unittest-config:
    stage: test
    dependencies:
        - build:gcc
    script:
        - build/gcc/release/bin/exec-helper run-test --module config --run-target unittest --compiler gcc --mode release

unittest-plugins:
    stage: test
    dependencies:
        - build:gcc
    script:
        - build/gcc/release/bin/exec-helper run-test --module plugins --run-target unittest --compiler gcc --mode release

unittest-commander:
    stage: test
    dependencies:
        - build:gcc
    script:
        - build/gcc/release/bin/exec-helper run-test --module commander --run-target unittest --compiler gcc --mode release

memory-check:
    stage: test
    dependencies:
        - build:gcc
    script:
        - pacman -S --noconfirm valgrind
        - build/gcc/release/bin/exec-helper analyze --analyze valgrind --compiler gcc --mode debug --run-target unittest

cppcheck:
    stage: test
    dependencies:
        - build:gcc
    script:
        - pacman -S --noconfirm cppcheck
        - build/gcc/release/bin/exec-helper analyze --analyze cppcheck

clang-static-analyzer:
    stage: test
    dependencies:
        - build:gcc
    script:
        - pacman -S --noconfirm scons clang cmake git
        - git submodule update --init
        - build/gcc/release/bin/exec-helper analyze --analyze clang-static-analyzer --compiler clang --mode debug

code-duplication-pmd-cpd:
    stage: test
    dependencies:
        - build:gcc
    script:
        - pacman -S --noconfirm java-environment unzip wget
        - mkdir -p 3rdparty/pmd
        - pushd 3rdparty/pmd && wget "https://downloads.sourceforge.net/project/pmd/pmd/5.5.2/pmd-bin-5.5.2.zip" && unzip pmd-bin-5.5.2.zip; popd
        - build/gcc/release/bin/exec-helper analyze --analyze pmd

coverage:
    stage: test
    dependencies:
        - build:gcc
    script:
        - pacman -S --noconfirm lcov
        - build/gcc/release/bin/exec-helper analyze --analyze lcov --compiler gcc --mode debug --run-target unittest
    artifacts:
        paths:
            - test_coverage/

pages:
    stage: deploy
    dependencies:
        - coverage
    script:
        - mkdir public
        - mv pages/index.html public/
        - mv test_coverage/ public/coverage
    artifacts:
        paths:
            - public
        expire_in: 30 days
