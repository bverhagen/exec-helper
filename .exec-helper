patterns:
    COMPILER:
        default-values:
            - gcc
            - clang
        short-option: c
        long-option: compiler
    MODE:
        default-values:
            - debug
            - release
        short-option: m
        long-option: mode
    TARGET:
        default-values:
            - ""
        short-option: t
        long-option: target
    RUNTARGET:
        default-values:
            - all
        short-option: r
        long-option: run-target
    MODULE:
        default-values:
            - config
            - yaml
            - core
            - plugins
            - commander
        short-option: e
        long-option: module
    ANALYZE:
        default-values:
            - cppcheck
            - clang-static-analyzer
            - valgrind
            - pmd
        short-option: a
        long-option: analyze

commands:
    - build
    - clean
    - rebuild
    - analyze
    - run-test

build:
    - scons

clean:
    - scons

rebuild:
    - clean
    - build

analyze:
    - selector

run-test:
    - command-line-command

selector:
    analyze:
        pattern: ANALYZE

scons:
    patterns:
        - COMPILER
        - MODE
    single-threaded: no
    build:
        command-line: 
            - compiler={COMPILER}
            - mode={MODE}
            - verbose=no
    clean:
        command-line:
            - --clean
            - compiler={COMPILER}
            - mode={MODE}
    target: "{TARGET}"

cppcheck:
    patterns:
        - TARGET
    src-dir: src
    target-path: "{TARGET}"
    command-line:
        - --std=c++11
        - --error-exitcode=1
    enable-checks:
        - all

clang-static-analyzer:
    build-command: build
    clean-command: clean
    compiler: envcc

command-line-command:
    run-test:
        patterns:
            - COMPILER
            - MODE
            - RUNTARGET
            - MODULE
        command-line: build/{COMPILER}/{MODE}/bin/test/{RUNTARGET}/{MODULE}-{RUNTARGET}

valgrind:
    run-command: run-test
    analyze:
        tool: memcheck
        command-line:
           - --leak-check=full 

pmd:
    patterns:
        - MODULE
    exec: 3rdparty/pmd/pmd-bin-5.5.2/bin/run.sh
    tool:
        - cpd
    language: cpp
    files: 
        - src/{MODULE}
    minimum-tokens: 100
    command-line:
        - " "
